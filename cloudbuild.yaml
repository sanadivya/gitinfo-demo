substitutions:
  _ENV: dev
  _PROJECT_ID: articulate-area-464808-q4
  _SERVICE_NAME: gitinfo-demo
  _REGION: europe-west1
  _REPO: gitinfo-demo
  _REVISION_ID: "${REVISION_ID}"
  _SERVICE_ACCOUNT: 715553450089-compute@developer.gserviceaccount.com

options:
  logging: CLOUD_LOGGING_ONLY

available_secrets:
  secretManager:
    - versionName: projects/${_PROJECT_ID}/secrets/GITHUB_TOKEN/versions/latest
      env: GITHUB_TOKEN
    - versionName: projects/${_PROJECT_ID}/secrets/TEAMS_WEBHOOK_URL/versions/latest
      env: TEAMS_WEBHOOK_URL
    - versionName: projects/${_PROJECT_ID}/secrets/TEAMS_WEBHOOK_FAILURE_URL/versions/latest
      env: TEAMS_WEBHOOK_FAILURE_URL

steps:
  
  - id: Build
    allowFailure: true
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - -c
      - |
        echo "üîß Simulating build..."
        if ! docker build -t "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_SERVICE_NAME}:$SHORT_SHA" .; then
          echo "Build failed" > /workspace/failure_marker
        fi

  - id: Push
    allowFailure: true
    waitFor: ["Build"]
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - -c
      - |
        echo "üì¶ Pushing image..."
        if ! docker push "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_SERVICE_NAME}:$SHORT_SHA"; then
          echo "Push failed" > /workspace/failure_marker
        fi

  - id: Deploy
    allowFailure: true
    waitFor: ["Push"]
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - -c
      - |
        echo "üöÄ Starting deployment..."
        if ! gcloud run deploy "${_SERVICE_NAME}" \
          --image="${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_SERVICE_NAME}:$SHORT_SHA" \
          --region="${_REGION}" \
          --allow-unauthenticated \
          --service-account="${_SERVICE_ACCOUNT}" \
          --set-secrets="TEAMS_WEBHOOK_URL=TEAMS_WEBHOOK_URL:latest" \
          --set-secrets="TEAMS_WEBHOOK_FAILURE_URL=TEAMS_WEBHOOK_FAILURE_URL:latest" \
          --set-secrets="GITHUB_TOKEN=GITHUB_TOKEN:latest"; then
          echo "Deploy failed" > /workspace/failure_marker
        fi

  - name: 'gcr.io/cloud-builders/curl'
    id: PR-Notify
    secretEnv: ['GITHUB_TOKEN', 'TEAMS_WEBHOOK_URL', 'TEAMS_WEBHOOK_FAILURE_URL']
    waitFor: ["Build", "Push", "Deploy"]
    allowFailure: true
    entrypoint: bash
    args:
      - -c
      - |
        set -e

        apt-get update && apt-get install -y jq curl

        echo "Fetching PR details for commit: ${_REVISION_ID}"

        COMMIT="${_REVISION_ID}"
        echo "Using commit: $$COMMIT"

        PR_DATA=$(curl -s \
          -H "Authorization: token $$GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.groot-preview+json" \
          "https://api.github.com/repos/sanadivya/gitinfo-demo/commits/$$COMMIT/pulls")

        echo "---- RAW PR_DATA ----"
        echo "$$PR_DATA"
        echo "---------------------"

        PR_NUMBER=$(echo "$$PR_DATA" | jq -r 'try (.[0].number) catch "null"')
        PR_TITLE=$(echo "$$PR_DATA" | jq -r 'try (.[0].title) catch "null"')
        PR_USER=$(echo "$$PR_DATA" | jq -r 'try (.[0].user.login) catch "null"')
        PR_URL=$(echo "$$PR_DATA" | jq -r 'try (.[0].html_url) catch "null"')
        PR_DESC=$(echo "$$PR_DATA" | jq -r 'try (.[0].body) catch ""')

        echo "PR_NUMBER=$$PR_NUMBER"
        echo "PR_TITLE=$$PR_TITLE"
        echo "PR_USER=$$PR_USER"
        echo "PR_URL=$$PR_URL"
        echo "PR_DESC=$$PR_DESC"
        echo "PR_DESC_ESCAPED=$$PR_DESC_ESCAPED"

        if [ "$$PR_NUMBER" = "null" ] || [ -z "$$PR_NUMBER" ] || [ "$$PR_NUMBER" = "N/A" ]; then
          echo "No PR found ‚Üí Sending deployment-only notification"
          PAYLOAD="{
            \"@type\": \"MessageCard\",
            \"@context\": \"http://schema.org/extensions\",
            \"themeColor\": \"0076D7\",
            \"summary\": \"Cloud Build Notification\",
            \"sections\": [{
              \"activityTitle\": \"‚úÖ Deployment Successful\",
              \"text\": \"### üìå Deployment Details\",
              \"facts\": [
                {\"name\": \"Service\", \"value\": \"${_SERVICE_NAME}\"},
                {\"name\": \"Project\", \"value\": \"${_PROJECT_ID}\"},
                {\"name\": \"Version\", \"value\": \"$SHORT_SHA\"},
                {\"name\": \"Environment\", \"value\": \"${_ENV}\"}
              ],
              \"markdown\": true
            }]
          }"
        else
          echo "PR found ‚Üí Sending deployment + PR notification"
          PAYLOAD="{
            \"@type\": \"MessageCard\",
            \"@context\": \"http://schema.org/extensions\",
            \"themeColor\": \"0076D7\",
            \"summary\": \"Cloud Build Notification\",
            \"sections\": [{
              \"activityTitle\": \"‚úÖ Deployment Successful\",
              \"text\": \"### üìå Deployment Details with PR Info\",
              \"facts\": [
                {\"name\": \"Service\", \"value\": \"${_SERVICE_NAME}\"},
                {\"name\": \"Project\", \"value\": \"${_PROJECT_ID}\"},
                {\"name\": \"Version\", \"value\": \"$SHORT_SHA\"},
                {\"name\": \"Environment\", \"value\": \"${_ENV}\"},
                {\"name\": \"PR #\", \"value\": \"$$PR_NUMBER\"},
                {\"name\": \"Title\", \"value\": \"$$PR_TITLE\"},
                {\"name\": \"Author\", \"value\": \"$$PR_USER\"},
                {\"name\": \"Link\", \"value\": \"$$PR_URL\"}
              ],
              \"markdown\": true
            },
            {
              \"activityTitle\": \"üìù PR Description\",
              \"text\": \"$$PR_DESC\",
              \"markdown\": true
            }]
          }"
        fi

        curl -X POST -H "Content-Type: application/json" \
        -d "$$PAYLOAD" \
        "$$TEAMS_WEBHOOK_URL"